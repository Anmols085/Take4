<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="11311" started-at="2018-04-09T05:29:11Z" finished-at="2018-04-09T05:29:23Z">
    <groups>
    </groups>
    <test name="TestEdx" duration-ms="10036" started-at="2018-04-09T05:29:11Z" finished-at="2018-04-09T05:29:21Z">
      <class name="com.sin.scenario.Test002">
        <test-method status="PASS" signature="printName()[pri:0, instance:com.sin.scenario.Test002@26be92ad]" name="printName" is-config="true" duration-ms="1" started-at="2018-04-09T10:59:11Z" finished-at="2018-04-09T10:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printName -->
        <test-method status="PASS" signature="verifySearchButton()[pri:0, instance:com.sin.scenario.Test002@26be92ad]" name="verifySearchButton" duration-ms="1315" started-at="2018-04-09T10:59:11Z" finished-at="2018-04-09T10:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchButton -->
        <test-method status="PASS" signature="loginEdx()[pri:0, instance:com.sin.scenario.Test002@26be92ad]" name="loginEdx" duration-ms="6921" started-at="2018-04-09T10:59:13Z" depends-on-methods="com.sin.scenario.Test002.verifySearchButton" finished-at="2018-04-09T10:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginEdx -->
      </class> <!-- com.sin.scenario.Test002 -->
      <class name="com.sin.scenario.Test003">
        <test-method status="PASS" signature="printName()[pri:0, instance:com.sin.scenario.Test003@14acaea5]" name="printName" is-config="true" duration-ms="0" started-at="2018-04-09T10:59:19Z" finished-at="2018-04-09T10:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printName -->
        <test-method status="PASS" signature="browseCourses()[pri:0, instance:com.sin.scenario.Test003@14acaea5]" name="browseCourses" duration-ms="1775" started-at="2018-04-09T10:59:19Z" finished-at="2018-04-09T10:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseCourses -->
      </class> <!-- com.sin.scenario.Test003 -->
    </test> <!-- TestEdx -->
    <test name="BrowseEdxCourses" duration-ms="1222" started-at="2018-04-09T05:29:21Z" finished-at="2018-04-09T05:29:23Z">
      <class name="com.sin.scenario.Test003">
        <test-method status="PASS" signature="printName()[pri:0, instance:com.sin.scenario.Test003@42e26948]" name="printName" is-config="true" duration-ms="0" started-at="2018-04-09T10:59:21Z" finished-at="2018-04-09T10:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printName -->
        <test-method status="PASS" signature="browseCourses()[pri:0, instance:com.sin.scenario.Test003@42e26948]" name="browseCourses" duration-ms="1217" started-at="2018-04-09T10:59:21Z" finished-at="2018-04-09T10:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseCourses -->
      </class> <!-- com.sin.scenario.Test003 -->
    </test> <!-- BrowseEdxCourses -->
    <test name="ExceptionTest" duration-ms="26" started-at="2018-04-09T05:29:23Z" finished-at="2018-04-09T05:29:23Z">
      <class name="com.sin.scenario.Test002">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.sin.scenario.Test002@26be92ad]" name="beforeSuite" is-config="true" duration-ms="3172" started-at="2018-04-09T10:59:08Z" finished-at="2018-04-09T10:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.sin.scenario.Test002@26be92ad]" name="afterClass" is-config="true" duration-ms="615" started-at="2018-04-09T10:59:23Z" finished-at="2018-04-09T10:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.sin.scenario.Test002 -->
      <class name="com.sin.scenario.Test004">
        <test-method status="PASS" signature="printName()[pri:0, instance:com.sin.scenario.Test004@204f30ec]" name="printName" is-config="true" duration-ms="0" started-at="2018-04-09T10:59:23Z" finished-at="2018-04-09T10:59:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printName -->
        <test-method status="PASS" signature="dividedByZeroExample1()[pri:0, instance:com.sin.scenario.Test004@204f30ec]" name="dividedByZeroExample1" duration-ms="7" started-at="2018-04-09T10:59:23Z" finished-at="2018-04-09T10:59:23Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zeroat com.sin.scenario.Test004.dividedByZeroExample1(Test004.java:14)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividedByZeroExample1 -->
        <test-method status="FAIL" signature="dividedByZeroExample2()[pri:0, instance:com.sin.scenario.Test004@204f30ec]" name="dividedByZeroExample2" duration-ms="3" started-at="2018-04-09T10:59:23Z" depends-on-methods="com.sin.scenario.Test004.dividedByZeroExample1" finished-at="2018-04-09T10:59:23Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zeroat com.sin.scenario.Test004.dividedByZeroExample2(Test004.java:19)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividedByZeroExample2 -->
      </class> <!-- com.sin.scenario.Test004 -->
    </test> <!-- ExceptionTest -->
  </suite> <!-- Suite -->
</testng-results>
